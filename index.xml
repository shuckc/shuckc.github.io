<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tea Engineering Blog</title><link>https://shucksmith.uk/</link><description>Recent content on Tea Engineering Blog</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Tea Engineering Ltd.</copyright><lastBuildDate>Sun, 06 Nov 2022 18:30:00 +0000</lastBuildDate><atom:link href="https://shucksmith.uk/index.xml" rel="self" type="application/rss+xml"/><item><title>FuseSoc options for SystemVerilog support in Yosys</title><link>https://shucksmith.uk/posts/2022-11-06-fusesoc-yosys-options/</link><pubDate>Sun, 06 Nov 2022 18:30:00 +0000</pubDate><guid>https://shucksmith.uk/posts/2022-11-06-fusesoc-yosys-options/</guid><description>If you get this error from fusesoc invoking Yosys:
$ fusesoc run --target=orangecrab_r0.2 shuckc:fpgachess:uci ... -- Running command `tcl edalize_yosys_template.tcl' -- 1. Executing Verilog-2005 frontend: ../src/shuckc_fpgachess_uci_0/hw/fen_decode.sv Lexer warning: The SystemVerilog keyword `logic' (at ../src/shuckc_fpgachess_uci_0/hw/fen_decode.sv:3) is not recognized unless read_verilog is called with -sv! ../src/shuckc_fpgachess_uci_0/hw/fen_decode.sv:3: ERROR: syntax error, unexpected TOK_ID, expecting ',' or '=' or ')' make: *** [Makefile:6: shuckc_fpgachess_uci_0.json] Error 1 This is caused by the fusesoc .core file specifying the fileset file as {file_type : verilogSource} rather than {file_type : systemVerilogSource}.</description></item><item><title>Chess Programming Basics</title><link>https://shucksmith.uk/posts/2022-04-05-chess-programming-basics/</link><pubDate>Mon, 04 Apr 2022 17:00:00 +0000</pubDate><guid>https://shucksmith.uk/posts/2022-04-05-chess-programming-basics/</guid><description>Curiosity One fun aspect of parenting is revisiting things you learnt as a child, as the teacher. Since putting a chess board somewhat prominantly at home the eldest has expressed some interest and learnt a few moves. We bought a chess book aimed for a young audiance to see the game taught gently, and I found myself learning more than expected.
Once down the rabbit hole of chess, I started to read about the early chess computers, and particularly those with bespoke hardware/software.</description></item><item><title>Bringing up ECP5 Versa with open tools on Windows</title><link>https://shucksmith.uk/posts/2021-06-14-fpga-versa-ecp5-board-demo/</link><pubDate>Mon, 14 Jun 2021 17:00:00 +0000</pubDate><guid>https://shucksmith.uk/posts/2021-06-14-fpga-versa-ecp5-board-demo/</guid><description>Specifically the Lattice ECP5 FPGA Versa Dev Kit with part number LFE5UM-45F-VERSA-EVN which is ever so slightly different from the prjtrellis example versa5g design as it has a previous iteration of the FPGA.
I used a windows machine for this walkthrough, so most of this was setting up the host USB stack ready for OpenOCD.
FPGA Toolchain I used the YoWASP binary builds by Whitequark which are distributed as&amp;hellip; python packages and installed using pip.</description></item><item><title>Consultancy</title><link>https://shucksmith.uk/consultancy/</link><pubDate>Mon, 24 May 2021 17:51:42 +0000</pubDate><guid>https://shucksmith.uk/consultancy/</guid><description>Our Expertise FIX and electronic trading systems (acceptor/initiator), risk checks and order handling Bitcoin/blockchain payment processing and wallets Stripe, and similar payment retail funds processing APIs. Telecommunications APIs, IDSN, SIP, termination and routing. Provider APIs such as Twillio &amp;amp; Nexmo Consensus protocols (raft), real-time pub-sub (redis), shared memory IPC (Chronicle, libchronicle) Webservices, websockets and scalable interactive services. Containerised and Kubernates hosted. Geo-tracking vehicles and commodities, using GPS hardware + GSM for logistics and delivery estimation.</description></item><item><title>Testing minio redis notifications</title><link>https://shucksmith.uk/posts/2020-03-17-minio-redis-notifications/</link><pubDate>Tue, 17 Mar 2020 17:00:00 +0000</pubDate><guid>https://shucksmith.uk/posts/2020-03-17-minio-redis-notifications/</guid><description>Documented at docs.min.io &amp;ldquo;Publish MinIO events via Redis&amp;rdquo;
Terminal 1 runs up local redis, enables password, binds to all if
% docker run --name some-redis -d redis % docker exec -it some-redis bash root@800973395e9f:/data# redis-cli 127.0.0.1:6379&amp;gt; config set requirepass yoursecret OK 127.0.0.1:6379&amp;gt; set bind 0.0.0.0 OK 127.0.0.1:6379&amp;gt; save OK 127.0.0.1:6379&amp;gt; monitor Terminal two runs minio server:
% docker run -p 9000:9000 -e &amp;quot;MINIO_ACCESS_KEY=EXAMPLE&amp;quot; -e &amp;quot;MINIO_SECRET_KEY=wJalrXUtnFE&amp;quot; minio/minio server /data Temrinal three fishes out the docker network ip for redis</description></item></channel></rss>